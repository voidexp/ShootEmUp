#
# Memory configuration for NROM-128 mapper:
# 16K of PRG-ROM, 8K of CHR-ROM
# Refer to https://www.nesdev.org/wiki/NROM
#
MEMORY {
  HEADER: start=0,     size=$0010, type=ro, fill=yes, file="%O";
  ROM:    start=$C000, size=$6000, type=ro, fill=yes, file="%O";
  ZP:     start=$00,   size=$0100, type=rw, file="";
  OAM:    start=$0200, size=$0100, type=rw, file="";
  RAM:    start=$0300, size=$0500, type=rw, file="";
}

#
# Segments configuration for iNES 2.0 file format:
#
# +--------------+------------+
# | iNES header  | 16 bytes   |
# +--------------+------------+
# | Code         | PRG-ROM    |
# | R/O data     | 16K        |
# | Level data   |            |
# | NMI vectors  |            |
# +--------------+------------+
# | Tile data    | CHR-ROM    |
# |              | 8K         |
# +--------------+------------+
#
# NOTE: The actual iNES header contents specify the memory configuration, see `rom.asm`.
#
# IMPORTANT: The output file is written as by segments definition order!
#
SEGMENTS {
  # iNES header (16 bytes)
  INES:     load=HEADER, type=ro;

  # PRG-ROM (16K)
  CODE:     load=ROM,    type=ro;
  RODATA:   load=ROM,    type=ro, align=$100;
  LEVEL:    load=ROM,    type=ro, define=yes;
  VECTORS:  load=ROM,    type=ro, start=$FFFA;

  # CHR-ROM (8K)
  CHR:      load=ROM,    type=ro;

  # RAM; not written to the file!
  ZEROPAGE: load=ZP,     type=zp;
  OAM:      load=OAM,    type=rw;
  BSS:      load=RAM,    type=rw, align=$10;
}
